(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{544:function(e,t,a){"use strict";a.r(t);var s=a(9),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("ul",[a("li",[e._v("通过Create React App创建项目")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npx create-react-app my-app\ncd my-app\nnpm start\n")])])]),a("ul",[a("li",[e._v("安装集中式管理路由所需包")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install --save react-router-dom react-router-config react-loadable\n")])])]),a("ul",[a("li",[e._v("添加集中式管理路由")])]),e._v(" "),a("ol",[a("li",[e._v("在src下新建common文件夹")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// common/router.js\nimport Loadable from '../utils/loadable.js'\nconst BasicLayout = Loadable(() => import(/* webpackChunkName: \"BasicLayout\" */ '../layouts/BasicLayout'))\nconst Entrance = Loadable(() => import(/* webpackChunkName: \"Entrance\" */ '../routes/Entrance/index'))\nconst PageNotFound = Loadable(() => import(/* webpackChunkName: \"PageNotFound\" */ '../components/PageNotFound/'))\nconst routes = [\n  {\n    component: BasicLayout,\n    routes: [\n      {\n        path: '/',\n        exact: true,\n        component: Entrance\n      },\n      {\n        path: '*',\n        component: PageNotFound\n      }\n    ]\n  }\n]\nexport default routes\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("在src下新建router.js文件")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("import React, { Component } from 'react'\nimport { renderRoutes } from 'react-router-config'\nimport { HashRouter as Router } from 'react-router-dom'\nimport routes from './common/router.js'\n\nclass Root extends Component {\n  render() {\n    return (\n      <Router>\n        {/* kick it all off with the root route */}\n        {renderRoutes(routes)}\n      </Router>\n    )\n  }\n}\nexport default Root\n// export default Root\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("最后在src/index.js文件中引入使用")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('import React from "react";\nimport ReactDOM from "react-dom";\nimport "./index.css";\nimport Router from "./router";\nimport reportWebVitals from "./reportWebVitals";\n\nReactDOM.render(<Router />, document.getElementById("root"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n')])])]),a("blockquote",[a("p",[e._v("不过用了这个react-router-config包后, 控制台会给出如下的警告提示:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("react-dom.development.js:67 Warning: componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: LoadableComponent\n")])])]),a("p",[e._v("挺难解决的, 并且这个包有点要无人维护的情况, 所以我决定放弃使用这个包, 转而使用官方提供的代码分割API: React.lazy")]),e._v(" "),a("blockquote",[a("p",[e._v("修改common/router.js文件")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// import Loadable from '../utils/loadable.js'\nimport React from 'react'\nconst BasicLayout = React.lazy(() => import(/* webpackChunkName: \"BasicLayout\" */ '../layouts/BasicLayout'))\nconst Entrance = React.lazy(() => import(/* webpackChunkName: \"Entrance\" */ '../routes/Entrance/index'))\n")])])]),a("blockquote",[a("p",[e._v("修改src/router.js文件")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// React.lazy不能单独使用，需要配合React.suspense，suspence是用来包裹异步组件，添加loading效果等\nimport React, { Component, Suspense } from "react";\nimport { renderRoutes } from "react-router-config";\nimport { HashRouter as Router } from "react-router-dom";\nimport routes from "./common/router.js";\n\nclass Root extends Component {\n  render() {\n    return (\n      <Suspense fallback={<div>Loading...</div>}>\n        <Router>\n          {/* kick it all off with the root route */}\n          {renderRoutes(routes)}\n        </Router>\n      </Suspense>\n    );\n  }\n}\nexport default Root;\n// export default Root\n')])])]),a("ul",[a("li",[e._v("基于Create React App二次配置webpack")])]),e._v(" "),a("blockquote",[a("p",[e._v("参考https://ant.design/docs/react/use-with-create-react-app-cn进行配置")])]),e._v(" "),a("p",[e._v("引入 react-app-rewired 并修改 package.json 里的启动配置。。由于新的 react-app-rewired@2.x 版本的关系，你需要还需要安装 customize-cra")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install react-app-rewired customize-cra --save-dev\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('/* package.json */\n"scripts": {\n-   "start": "react-scripts start",\n+   "start": "react-app-rewired start",\n-   "build": "react-scripts build",\n+   "build": "react-app-rewired build",\n-   "test": "react-scripts test --env=jsdom",\n+   "test": "react-app-rewired test --env=jsdom",\n}\n')])])]),a("blockquote",[a("p",[e._v("然后在项目根目录创建一个 config-overrides.js 用于修改默认配置。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('const path = require("path");\nfunction resolve(dir) {\n  return path.join(__dirname, ".", dir);\n}\nmodule.exports = function override(config, env) {\n  config.resolve.alias = {\n    "@": resolve("src")\n  };\n  return config;\n};\n')])])]),a("ul",[a("li",[e._v("引入 antd-mobile UI框架")])]),e._v(" "),a("blockquote",[a("p",[e._v("也可以根据官网配置, 地址: https://mobile.ant.design/index-cn")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install antd-mobile --save\n")])])]),a("p",[e._v("config-overrides.js文件修改")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('const path = require("path");\nconst { override, fixBabelImports, addWebpackAlias } = require("customize-cra");\nfunction resolve(dir) {\n  return path.join(__dirname, ".", dir);\n}\nmodule.exports = override(\n  addWebpackAlias({\n    "@": resolve("src")\n  }),\n  fixBabelImports("import", {\n    libraryName: "antd-mobile",\n    style: "css"\n  })\n);\n')])])]),a("ul",[a("li",[e._v("添加css扩展 -- sass")])]),e._v(" "),a("p",[e._v("安装sass-loader和node-sass依赖")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install sass-loader node-sass --save-dev\n")])])]),a("p",[e._v("因为create-react-app已经默认已经添加了scss/sass对应的loader，所以在安装完之后就可以在项目中使用scss了，详见配置可以参考\\node_modules\\react-scripts")]),e._v(" "),a("blockquote",[a("p",[e._v("全局配置scss变量/函数")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install --save-dev sass-resources-loader\n")])])]),a("p",[e._v("config-overrides.js文件修改")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('const { override, adjustStyleLoaders } = require("customize-cra");\nmodule.exports = override(\n  // ...其他配置...\n  adjustStyleLoaders(rule => {\n    if (rule.test.toString().includes("scss")) {\n      rule.use.push({\n        loader: require.resolve("sass-resources-loader"),\n        options: {\n          resources: "./src/assets/scss/output.scss" //这里是你自己放公共scss变量的路径\n        }\n      });\n    }\n  })\n);\n')])])]),a("p",[e._v("第一次配置React项目，记录一下")])])}),[],!1,null,null,null);t.default=n.exports}}]);